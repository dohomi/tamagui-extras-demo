{"version":3,"file":"packages_app_navigation_native_index_tsx.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAvCA;AAyCA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAEA;AACA;AAEA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;ACZA","sources":["webpack://next-app/../../packages/app/features/home/screen.tsx","webpack://next-app/../../packages/app/features/user/detail-screen.tsx","webpack://next-app/../../packages/app/navigation/native/index.tsx","webpack://next-app/ignored|/Users/steffen/Desktop/repos/tamagui-extras-demo/node_modules/next/dist/shared/lib/bloom-filter|crypto"],"sourcesContent":["import { Anchor, Button, H1, Paragraph, Separator, Sheet, useToast, XStack, YStack } from '@my/ui'\nimport { ChevronDown, ChevronUp } from '@tamagui/lucide-icons'\nimport React, { useState } from 'react'\nimport { LmLinkButton } from '@tamagui-extras/link'\n\nexport function HomeScreen() {\n  // const linkProps = useLink({\n  //   href: '/user/nate',\n  // })\n\n  return (\n    <YStack f={1} jc=\"center\" ai=\"center\" p=\"$4\" space>\n      <YStack space=\"$4\" maw={600}>\n        <H1 ta=\"center\">Welcome to Tamagui.</H1>\n        <Paragraph ta=\"center\">\n          Here's a basic starter to show navigating from one screen to another. This screen uses the\n          same code on Next.js and React Native.\n        </Paragraph>\n\n        <Separator />\n        <Paragraph ta=\"center\">\n          Made by{' '}\n          <Anchor color=\"$color12\" href=\"https://twitter.com/natebirdman\" target=\"_blank\">\n            @natebirdman\n          </Anchor>\n          ,{' '}\n          <Anchor\n            color=\"$color12\"\n            href=\"https://github.com/tamagui/tamagui\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            give it a ⭐️\n          </Anchor>\n        </Paragraph>\n      </YStack>\n\n      <XStack>\n        <LmLinkButton link={{ href: '/user/nate' }}>Link to user</LmLinkButton>\n      </XStack>\n\n      <SheetDemo />\n    </YStack>\n  )\n}\n\nfunction SheetDemo() {\n  const [open, setOpen] = useState(false)\n  const [position, setPosition] = useState(0)\n  const toast = useToast()\n  return (\n    <>\n      <Button\n        size=\"$6\"\n        icon={open ? ChevronDown : ChevronUp}\n        circular\n        onPress={() => setOpen((x) => !x)}\n      />\n      <Sheet\n        modal\n        open={open}\n        onOpenChange={setOpen}\n        snapPoints={[80]}\n        position={position}\n        onPositionChange={setPosition}\n        dismissOnSnapToBottom\n      >\n        <Sheet.Overlay />\n        <Sheet.Frame ai=\"center\" jc=\"center\">\n          <Sheet.Handle />\n          <Button\n            size=\"$6\"\n            circular\n            icon={ChevronDown}\n            onPress={() => {\n              setOpen(false)\n              toast.show('Sheet closed!', {\n                message: 'Just showing how toast works...',\n              })\n            }}\n          />\n        </Sheet.Frame>\n      </Sheet>\n    </>\n  )\n}\n","import { Button, Paragraph, YStack } from '@my/ui'\nimport { ChevronLeft } from '@tamagui/lucide-icons'\nimport React from 'react'\nimport { createParam } from 'solito'\nimport { useLink } from 'solito/link'\n\nconst { useParam } = createParam<{ id: string }>()\n\nexport function UserDetailScreen() {\n  const [id] = useParam('id')\n  const link = useLink({\n    href: '/',\n  })\n\n  return (\n    <YStack f={1} jc=\"center\" ai=\"center\" space>\n      <Paragraph ta=\"center\" fow=\"800\">{`User ID: ${id}`}</Paragraph>\n      <Button {...link} icon={ChevronLeft}>\n        Go Home\n      </Button>\n    </YStack>\n  )\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack'\n\nimport { HomeScreen } from '../../features/home/screen'\nimport { UserDetailScreen } from '../../features/user/detail-screen'\n\nconst Stack = createNativeStackNavigator<{\n  home: undefined\n  'user-detail': {\n    id: string\n  }\n}>()\n\nexport function NativeNavigation() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"home\"\n        component={HomeScreen}\n        options={{\n          title: 'Home',\n        }}\n      />\n      <Stack.Screen\n        name=\"user-detail\"\n        component={UserDetailScreen}\n        options={{\n          title: 'User',\n        }}\n      />\n    </Stack.Navigator>\n  )\n}\n","/* (ignored) */"],"names":[],"sourceRoot":""}