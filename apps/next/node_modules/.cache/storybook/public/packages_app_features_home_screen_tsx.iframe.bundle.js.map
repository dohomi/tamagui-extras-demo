{"version":3,"file":"packages_app_features_home_screen_tsx.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAvCA;AAyCA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA","sources":["webpack://next-app/../../packages/app/features/home/screen.tsx","webpack://next-app/../../node_modules/@tamagui/lucide-icons/dist/esm/icons/chevron-down.mjs","webpack://next-app/../../node_modules/@tamagui/lucide-icons/dist/esm/icons/chevron-up.mjs"],"sourcesContent":["import { Anchor, Button, H1, Paragraph, Separator, Sheet, useToast, XStack, YStack } from '@my/ui'\nimport { ChevronDown, ChevronUp } from '@tamagui/lucide-icons'\nimport React, { useState } from 'react'\nimport { LmLinkButton } from '@tamagui-extras/link'\n\nexport function HomeScreen() {\n  // const linkProps = useLink({\n  //   href: '/user/nate',\n  // })\n\n  return (\n    <YStack f={1} jc=\"center\" ai=\"center\" p=\"$4\" space>\n      <YStack space=\"$4\" maw={600}>\n        <H1 ta=\"center\">Welcome to Tamagui.</H1>\n        <Paragraph ta=\"center\">\n          Here's a basic starter to show navigating from one screen to another. This screen uses the\n          same code on Next.js and React Native.\n        </Paragraph>\n\n        <Separator />\n        <Paragraph ta=\"center\">\n          Made by{' '}\n          <Anchor color=\"$color12\" href=\"https://twitter.com/natebirdman\" target=\"_blank\">\n            @natebirdman\n          </Anchor>\n          ,{' '}\n          <Anchor\n            color=\"$color12\"\n            href=\"https://github.com/tamagui/tamagui\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            give it a ⭐️\n          </Anchor>\n        </Paragraph>\n      </YStack>\n\n      <XStack>\n        <LmLinkButton link={{ href: '/user/nate' }}>Link to user</LmLinkButton>\n      </XStack>\n\n      <SheetDemo />\n    </YStack>\n  )\n}\n\nfunction SheetDemo() {\n  const [open, setOpen] = useState(false)\n  const [position, setPosition] = useState(0)\n  const toast = useToast()\n  return (\n    <>\n      <Button\n        size=\"$6\"\n        icon={open ? ChevronDown : ChevronUp}\n        circular\n        onPress={() => setOpen((x) => !x)}\n      />\n      <Sheet\n        modal\n        open={open}\n        onOpenChange={setOpen}\n        snapPoints={[80]}\n        position={position}\n        onPositionChange={setPosition}\n        dismissOnSnapToBottom\n      >\n        <Sheet.Overlay />\n        <Sheet.Frame ai=\"center\" jc=\"center\">\n          <Sheet.Handle />\n          <Button\n            size=\"$6\"\n            circular\n            icon={ChevronDown}\n            onPress={() => {\n              setOpen(false)\n              toast.show('Sheet closed!', {\n                message: 'Just showing how toast works...',\n              })\n            }}\n          />\n        </Sheet.Frame>\n      </Sheet>\n    </>\n  )\n}\n","import { jsx } from \"react/jsx-runtime\";\nimport { memo } from \"react\";\nimport {\n  Polyline,\n  Svg\n} from \"react-native-svg\";\nimport { themed } from \"../themed\";\nconst Icon = (props) => {\n  const { color = \"black\", size = 24, ...otherProps } = props;\n  return /* @__PURE__ */ jsx(\n    Svg,\n    {\n      width: size,\n      height: size,\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      stroke: `${color}`,\n      strokeWidth: \"2\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      ...otherProps,\n      children: /* @__PURE__ */ jsx(\n        Polyline,\n        {\n          points: \"6 9 12 15 18 9\",\n          fill: \"none\",\n          stroke: `${color}`,\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n};\nIcon.displayName = \"ChevronDown\";\nconst ChevronDown = memo(themed(Icon));\nexport {\n  ChevronDown\n};\n//# sourceMappingURL=chevron-down.mjs.map\n","import { jsx } from \"react/jsx-runtime\";\nimport { memo } from \"react\";\nimport {\n  Polyline,\n  Svg\n} from \"react-native-svg\";\nimport { themed } from \"../themed\";\nconst Icon = (props) => {\n  const { color = \"black\", size = 24, ...otherProps } = props;\n  return /* @__PURE__ */ jsx(\n    Svg,\n    {\n      width: size,\n      height: size,\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      stroke: `${color}`,\n      strokeWidth: \"2\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      ...otherProps,\n      children: /* @__PURE__ */ jsx(\n        Polyline,\n        {\n          points: \"18 15 12 9 6 15\",\n          fill: \"none\",\n          stroke: `${color}`,\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n};\nIcon.displayName = \"ChevronUp\";\nconst ChevronUp = memo(themed(Icon));\nexport {\n  ChevronUp\n};\n//# sourceMappingURL=chevron-up.mjs.map\n"],"names":[],"sourceRoot":""}